name: Build And Deploy Vario Business Component
on:
    workflow_call:
        inputs:
            type:
                description: 'Define Application Type'
                required: true
                type: string
            branch:
                description: 'Define Branch to check-out'
                required: true
                type: string
                default: 'master'

#concurrency: 
#  group: ${{ github.workflow }}-${{ inputs.type }}-${{ github.ref }}
#  cancel-in-progress: true
env:
    CONFIGURATION: Release
    DOTNET_CORE_VERSION: 8.0.x
    WORKING_DIRECTORY: ""
    ARTIFACT_NAME: ""
    AZURE_WEBAPP_PACKAGE_PATH: ""
  
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
          with: 
                ref: ${{ inputs.branch}}
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
        - name: Determine Variables
          shell: bash
          run: |
            if [ "${{ inputs.type }}" = "Api" ]; then
                export  WORKING_DIRECTORY="${{ github.workspace }}/WorkflowTestRepository"
            elif [ "${{ inputs.type }}" = "Interface" ]; then
                export  WORKING_DIRECTORY="${{ github.workspace }}/WorkflowTestRepository.Interface"
            fi

            if [ "${{ inputs.type }}" = "Api" ]; then
                export  AZURE_WEBAPP_PACKAGE_PATH="${{ github.workspace }}/WorkflowTestRepository/publish"
            elif [ "${{ inputs.type }}" = "Interface" ]; then
                export  AZURE_WEBAPP_PACKAGE_PATH="${{ github.workspace }}/WorkflowTestRepository.Interface/publish"
            fi

            if [ "${{ inputs.type }}" = "Api" ]; then
                export  ARTIFACT_NAME="WorkflowTestRepositoryAPI"
            elif [ "${{ inputs.type }}" = "Interface" ]; then
                export ARTIFACT_NAME="WorkflowTestRepositoryInterface"
            fi

            echo "WORKING_DIRECTORY=$WORKING_DIRECTORY" >> $GITHUB_ENV
            echo "AZURE_WEBAPP_PACKAGE_PATH=$AZURE_WEBAPP_PACKAGE_PATH" >> $GITHUB_ENV
            echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

            echo "$WORKING_DIRECTORY - $AZURE_WEBAPP_PACKAGE_PATH - $ARTIFACT_NAME"
            echo "${{ env.WORKING_DIRECTORY}} - ${{ env.AZURE_WEBAPP_PACKAGE_PATH}} - ${{ env.ARTIFACT_NAME}}"
        - name: Show Secret 
          run: |
            echo "Printing the secret value '${{ secrets.AVerySenstiveSecret }}' "    
            echo "${{ secrets.AVerySenstiveSecret }}"    
        - name: Restore
          run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
        - name: Build
          run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
        - name: Publish
          run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}" --no-self-contained
        - name: Publish Artifacts
          uses: actions/upload-artifact@v1.0.0
          with:
            name: ${{ env.ARTIFACT_NAME }}
            path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}